USE SIAA_teste
--GO 

--DROP PROCEDURE IF EXISTS  SP_IA_PRECIFICACAO_EXTRACAO

--GO 
--CREATE PROCEDURE SP_IA_PRECIFICACAO_EXTRACAO (@p_referencia VARCHAR(20))
--AS
--BEGIN
	IF OBJECT_ID('tempdb..#TB_IA_PRECIFICACAO_ITEM_REMUNERACAO_TRATAMENTOS') IS NOT NULL
		DROP TABLE #TB_IA_PRECIFICACAO_ITEM_REMUNERACAO_TRATAMENTOS

	IF OBJECT_ID('tempdb..#portifolioclientes_odontologia') IS NOT NULL
		DROP TABLE #portifolioclientes_odontologia

	IF OBJECT_ID('tempdb..#Clientes_contratos_valores') IS NOT NULL
		DROP TABLE #Clientes_contratos_valores

	IF OBJECT_ID('tempdb..#TB_IA_PRECIFICACAO_TEMP_CALC_FINAL') IS NOT NULL
		DROP TABLE #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL

	IF OBJECT_ID('tempdb..#TB_IA_PRECIFICACAO_TEMP_BASE') IS NOT NULL
		DROP TABLE #TB_IA_PRECIFICACAO_TEMP_BASE


	DECLARE @p_referencia VARCHAR(20) = '2020-01-01',
		@Meses INT = 12
		,@ID_HISTORICO INT
		,@DT_HISTORICO DATE = GETDATE()

	-- BUSCA O ULTIMO ID E ADICIONA MAIS 1  
	SELECT @ID_HISTORICO = ISNULL(MAX(ID_HISTORICO), 0) + 1
	FROM TB_IA_PRECIFICACAO_REPOSITORIO_CALCULO_DETALHAMENTO_HISTORICO

	--BEGIN TRY
	--	BEGIN TRAN

		-- TABELAS PRINCIPAIS    
		SELECT 
			 SIR.IdRegistro
			,SR.DT_REFERENCIA
			,SIR.cd_beneficiario
			,SIT.CD_DENTISTA
			,C.idPlano
			,SIR.VL_ITEM
			,SIR.DT_ITEM
			,SIR.vl_beneficio
			,SIR.CD_PROCEDIMENTO
			,SIR.cd_tipo_item
			,SIT.idcliente
			,SIT.IdContratoCliente
			,SIT.CD_ESPECIALIDADE AS IdEspecialidade
		INTO #TB_IA_PRECIFICACAO_ITEM_REMUNERACAO_TRATAMENTOS
		FROM siapweb_teste.dbo.siitem_remuneracao sir WITH (NOLOCK)
		INNER JOIN siapweb_teste.dbo.siremuneracao sr WITH (NOLOCK) ON sr.cd_remuneracao = sir.cd_remuneracao_pagamento
		INNER JOIN BASICUS_TESTE.DBO.SITRATAMENTOS SIT ON SIT.IDTRATAMENTO = SIR.IDTRATAMENTO
		INNER JOIN BASICUS_TESTE.DBO.CONTRATOS C ON C.IDCONTRATO = SIT.IdContratoCliente
		INNER JOIN BASICUS_TESTE.DBO.TIPOS_CONTRATO TC ON TC.IDTIPO = C.TIPOCONTRATO
		WHERE SR.DT_REFERENCIA >= DATEADD(MM, - @Meses, @p_referencia)
			AND SR.DT_REFERENCIA <= @p_referencia
			
		-- TABELA TEMPORARIA PORTIFOLIO CLIENTES ODONTOLOGIA     
		SELECT *
		INTO #portifolioclientes_odontologia
		FROM basicus_teste.DBO.portifolioclientes_odontologia PO
		WHERE PO.DT_REFERENCIA >= DATEADD(MM, - @Meses, @p_referencia)
			AND PO.DT_REFERENCIA <= @p_referencia
			AND IdTipo NOT IN (3 ,4 ,17,18)

		-- TABELA TEMPORARIA CLIENTES CONTRATOS VALORES     
		--SELECT ccv.idcliente, ccv.idContrato,  CCV.COMPETENCIA, CCV.IdAdesao, CCV.VALOR INTO #Clientes_contratos_valores     
		--FROM   clientes_contratos_valores ccv      
		--WHERE COMPETENCIA >= LEFT(CONVERT(varchar(20), DATEADD(MM, -12, CONVERT(DATE, @p_referencia)) ,112),6)     
		--AND COMPETENCIA <= LEFT(CONVERT(varchar(20), CONVERT(DATE, @p_referencia) ,112),6)    
		SELECT PO.DT_REFERENCIA
			,PO.IdCliente
			,SR.CD_BENEFICIARIO
			,SR.cd_dentista
			,SR.VL_ITEM
			,SR.DT_ITEM
			,SR.vl_beneficio
			,SR.CD_PROCEDIMENTO
			,T.IdTipoFaturamento
			,SR.IDRegistro
			,SR.cd_tipo_item
			,TC.IdTipo
			,E.IdEmpresa
			,
			--ISNULL((SELECT TOP 1 CASE WHEN DS_RAMO IS NULL OR DS_RAMO = ' ' THEN 'N�O POSSUI' ELSE DS_RAMO END  FROM SIAA_TESTE.DBO.TB_IA_PRECIFICACAO_CNPJ_RAMO     
			--WHERE CNPJ collate SQL_Latin1_General_CP1_CI_AS = E.CNPJ ), 'N�O POSSUI') DS_RAMO,    
			CASE 
				WHEN PO.TIPOADESAO = 'NOVA VENDA'
					OR PO.TIPOADESAO = 'MENOS 06 MESES'
					OR PO.TIPOADESAO = 'Menos de 06 meses - N�O COMISSION�VEL'
					THEN 'VIDA  NOVA'
				ELSE 'VIDA ANTIGA'
				END AS CLASSIFICACAO_VIDA
			,C.IdLocalidade AS idLocalidadeBeneficiario
			,
			--LL.LOC_NO,    
			C.IdPlano
			,C.TIPOCONTRATO
			,SIVD.idEspecialidade
			,LL.TIPO AS TIPO_LOCALIDADE
			,
			PO.Valor AS VALOR_DO_CONTRATO
		INTO #TB_IA_PRECIFICACAO_TEMP_BASE
		FROM #portifolioclientes_odontologia PO
		INNER JOIN (
			SELECT IDRegistro
				,CD_BENEFICIARIO
				,CD_DENTISTA
				,VL_ITEM
				,dt_item
				,vl_beneficio
				,CD_PROCEDIMENTO
				,cd_tipo_item
				,IdContratoCliente
				,Dt_Referencia
				,idPlano
				,IdEspecialidade
			FROM #TB_IA_PRECIFICACAO_ITEM_REMUNERACAO_TRATAMENTOS
			) AS SR ON SR.IdPlano = PO.cd_tipo_plano
			AND SR.IdContratoCliente = PO.IdContrato
			AND SR.CD_BENEFICIARIO = PO.IDCLiente
			AND SR.dt_referencia = PO.DT_REFERENCIA
		INNER JOIN BASICUS_TESTE.DBO.CONTRATOS C -- 38023    
			ON C.IDCONTRATO = PO.IdContrato
		INNER JOIN BASICUS_TESTE.DBO.TIPOS_CONTRATO TC -- 38023    
			ON TC.IDTIPO = C.TIPOCONTRATO  
		INNER JOIN BASICUS_TESTE..SIVDENTISTASCONTRATOS SIVD  
			ON SIVD.IDREGISTRO = SR.IDREGISTRO
		INNER JOIN BASICUS_TESTE.DBO.SIPROCEDIMENTOS_AGRUPAMENTO T7   
			ON ISNULL(SR.CD_PROCEDIMENTO, 1) = T7.IDPROCEDIMENTO
			AND T7.STATUS = 1
		INNER JOIN BASICUS_TESTE.DBO.SIGRUPO_PROCEDIMENTOS_ITENS T8  
			ON T7.IDAGRUPAMENTO = T8.IDREGITEM
			AND T8.IDGRUPO = 10
			AND T8.STATUS = 1
		INNER JOIN BASICUS_TESTE.dbo.EMPRESAS E 
			ON E.IdEmpresa = c.IdEmpresa
		LEFT JOIN BASICUS_TESTE.DBO.EMPRESAS_TIPO_FATURAMENTO AS TFP  
			ON TFP.IDEMPRESA = C.IDEMPRESA
		LEFT JOIN BASICUS_TESTE.DBO.TIPOSFATURAMENTOPJ T     
			ON TFP.IDTIPOFATURAMENTO = T.IDTIPOFATURAMENTO
		LEFT JOIN (
			SELECT LL.LOC_NU_SEQUENCIAL
				,UPPER(LL.LOC_NO) LOC_NO
				,ISNULL(LRMB.TIPO, 'INT') TIPO
			FROM CEPS.DBO.LOG_LOCALIDADE LL
			LEFT JOIN CEPS.DBO.LOG_REGIAO_METROPOLITANA_BRASIL LRMB ON LRMB.SIGLA_UF = LL.UFE_SG
				--AND UPPER(LRMB.NOME_MUN) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS = UPPER(LL.LOC_NO) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS  
				AND UPPER(dbo.FN_IA_PRECIFICACAO_REMOVE_ACENTOS(LRMB.NOME_MUN)) = UPPER(dbo.FN_IA_PRECIFICACAO_REMOVE_ACENTOS(LL.LOC_NO))
		) LL 
			ON LL.LOC_NU_SEQUENCIAL = C.IdLocalidade   
		WHERE PO.IdTipo NOT IN (3 ,4 ,17 ,18)
		AND PO.CD_TIPO_PLANO NOT IN (53) 

		
		
		CREATE TABLE #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL 
		(
			DT_REFERENCIA DATE
			,IdPlano INT
			,ID_LOCALIDADE_BENEFICIARIO INT
			,TIPO_LOCALIDADE VARCHAR(20)
			,ID_TIPO_FATURAMENTO INT  
			,QUANTIDADE_MEDIA_DE_PROCEDIMENTOS_POR_PACIENTE_NO_ANO FLOAT
			,ESPERANCA_QUANTIDADE_MEDIA_DE_PROCEDIMENTOS_POR_PACIENTE_NO_ANO FLOAT
			,CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO FLOAT
			,ESPERANCA_CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO FLOAT
			,UTILIZACAO FLOAT
			,CUSTO_ESTATISTICO_DO_PLANO FLOAT
		)

		INSERT INTO #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL (
			 DT_REFERENCIA
			,IDPLANO
			,ID_LOCALIDADE_BENEFICIARIO
			,TIPO_LOCALIDADE
			,ID_TIPO_FATURAMENTO
			)
		SELECT 
			 DT_REFERENCIA
			,IDPLano
			,idLocalidadeBeneficiario
			,TIPO_LOCALIDADE
			,IDTipoFaturamento
		FROM #TB_IA_PRECIFICACAO_TEMP_BASE
		GROUP BY 
			 DT_REFERENCIA
			,IDPLano
			,idLocalidadeBeneficiario
			,TIPO_LOCALIDADE
			,IDTipoFaturamento
			

		 -- CALCULA A QUANTIDADE MEDIA ARITIMETICA DE PROCEDIMENTOS POR PACIENTE NO ANO   
		 UPDATE TIPTCF
		 SET QUANTIDADE_MEDIA_DE_PROCEDIMENTOS_POR_PACIENTE_NO_ANO = TB_QUANTIDADE_PROCEDIMENTO_POR_PACIENTE.QUANTIDADE_MEDIA_DE_PROCEDIMENTOS_POR_PACIENTE_NO_ANO
		 FROM #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL TIPTCF
		 INNER JOIN TB_IA_SEGMENTACAO_LOCALIDADE TISL 
				ON (TISL.ID_LOCALIDADE = TIPTCF.ID_LOCALIDADE_BENEFICIARIO)
		 INNER JOIN 
		 (
				SELECT 
					    IdPlano
					   ,TISL.CLUSTER 
					   ,CAST(COUNT(CD_PROCEDIMENTO) AS DECIMAL(20, 4)) / CAST(COUNT(DISTINCT CD_BENEFICIARIO) AS DECIMAL(20, 4)) QUANTIDADE_MEDIA_DE_PROCEDIMENTOS_POR_PACIENTE_NO_ANO
				FROM TB_IA_PRECIFICACAO_TEMP_BASE TB
				INNER JOIN TB_IA_SEGMENTACAO_LOCALIDADE TISL 
					ON (TISL.ID_LOCALIDADE = TB.IdLocalidadeBeneficiario)
				WHERE 1 = 1
					AND IdPlano NOT IN (53)
				GROUP BY TISL.CLUSTER
						 ,IdPlano

		 ) TB_QUANTIDADE_PROCEDIMENTO_POR_PACIENTE 

			ON TB_QUANTIDADE_PROCEDIMENTO_POR_PACIENTE.IdPlano = TIPTCF.idPlano
			AND TB_QUANTIDADE_PROCEDIMENTO_POR_PACIENTE.CLUSTER = TISL.CLUSTER

		-- ATUALIZA OS NULLS     
		UPDATE #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL
		SET QUANTIDADE_MEDIA_DE_PROCEDIMENTOS_POR_PACIENTE_NO_ANO = 0
		WHERE QUANTIDADE_MEDIA_DE_PROCEDIMENTOS_POR_PACIENTE_NO_ANO IS NULL



		-- CALCULA A ESPERANCA MATEMATICA DA QUANTIDADE MEDIA DE PROCEDIMENTOS POR PACIENTE NO ANO 
		UPDATE TIPTCF
		SET ESPERANCA_QUANTIDADE_MEDIA_DE_PROCEDIMENTOS_POR_PACIENTE_NO_ANO = T.ESPERANCA_QUANTIDADE_MEDIA_DE_PROCEDIMENTOS_POR_PACIENTE_NO_ANO
		FROM #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL TIPTCF
		INNER JOIN TB_IA_SEGMENTACAO_LOCALIDADE TISL 
			ON (TISL.ID_LOCALIDADE = TIPTCF.ID_LOCALIDADE_BENEFICIARIO)
		INNER JOIN 
		(
			SELECT IDPLANO, CLUSTER, SUM (ESPERANCA) ESPERANCA_QUANTIDADE_MEDIA_DE_PROCEDIMENTOS_POR_PACIENTE_NO_ANO
			FROM 
			( 
					SELECT IDPLANO,  CLUSTER, CD_BENEFICIARIO, 
					COUNT(CD_PROCEDIMENTO) QTD , MAX(QTD_TOTAL_PROCEDIMENTO) QTD_TOTAL ,
					COUNT(CD_PROCEDIMENTO) * (COUNT(CD_PROCEDIMENTO) / CAST(MAX(QTD_TOTAL_PROCEDIMENTO) AS DECIMAL(12, 4))) AS ESPERANCA
						
					FROM ( 
						SELECT 
							 IDPLANO
							,CD_BENEFICIARIO
							,TIPTB.CD_PROCEDIMENTO
							,IDPlano AS CD_TIPO_PLANO
							,COUNT(TIPTB.CD_PROCEDIMENTO) OVER (
												PARTITION BY IDPLANO, TISL.CLUSTER
							) QTD_TOTAL_PROCEDIMENTO
							,TIPTB.idLocalidadeBeneficiario
							,TISL.CLUSTER
						FROM TB_IA_PRECIFICACAO_TEMP_BASE TIPTB
						INNER JOIN TB_IA_SEGMENTACAO_LOCALIDADE TISL 
							ON (TISL.ID_LOCALIDADE = TIPTB.IdLocalidadeBeneficiario)
						INNER JOIN BASICUS_TESTE..SICOBERTURAS_PLANOS_PROCEDIMENTOS SCPP ON SCPP.CD_PLANO = TIPTB.IDPLano
							AND SCPP.CD_PROCEDIMENTO = TIPTB.CD_PROCEDIMENTO
						WHERE 1 = 1
							AND TIPTB.IdPlano NOT IN (53)
							AND TIPTB.cd_tipo_item = 12
							AND vl_item <> 0
					) AS T
					WHERE IdPlano != 2075
					GROUP BY  IDPLANO, CLUSTER, CD_BENEFICIARIO
			) AS T
			GROUP BY IDPLANO , CLUSTER 	
		) AS T
		ON T.IDPLANO = TIPTCF.IDPLANO
		AND T.CLUSTER = TISL.CLUSTER 

		-- ATUALIZA OS NULLS     
		UPDATE #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL
		SET ESPERANCA_QUANTIDADE_MEDIA_DE_PROCEDIMENTOS_POR_PACIENTE_NO_ANO = 0
		WHERE ESPERANCA_QUANTIDADE_MEDIA_DE_PROCEDIMENTOS_POR_PACIENTE_NO_ANO IS NULL




		-- CALCULA CUSTO MEDIO ARITIMETICO DOS PROCEDIMENTOS NO ANO 
		UPDATE TIPTCF
		SET CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO = TB_CUSTO_MEDIO_PROC_NO_ANO.CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO
		FROM #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL TIPTCF
		INNER JOIN 
		(

			SELECT 
				TIPTB.IDPLANO
				,LL.TIPO
				,SUM(CAST(TIPTB.VL_ITEM AS DECIMAL(15, 4))) / (COUNT(*) - (MAX(GLOSADOS.QUANTIDADE_GLOSADOS) - MAX(NAO_GLOSADOS.QUANTIDADE_NAO_GLOSADOS))) AS CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO
			FROM TB_IA_PRECIFICACAO_TEMP_BASE TIPTB
			LEFT JOIN 
			(
				SELECT LL.LOC_NU_SEQUENCIAL
					,UPPER(LL.LOC_NO) LOC_NO
					,ISNULL(LRMB.TIPO, 'INT') TIPO
				FROM CEPS.DBO.LOG_LOCALIDADE LL
				LEFT JOIN CEPS.DBO.LOG_REGIAO_METROPOLITANA_BRASIL LRMB 
					ON LRMB.SIGLA_UF = LL.UFE_SG
					AND UPPER(dbo.FN_IA_PRECIFICACAO_REMOVE_ACENTOS(LRMB.NOME_MUN)) = UPPER(dbo.FN_IA_PRECIFICACAO_REMOVE_ACENTOS(LL.LOC_NO))
			) LL 
				ON LL.LOC_NU_SEQUENCIAL = TIPTB.idLocalidadeBeneficiario

			LEFT JOIN
			(
				SELECT 
					TIPTB.IDPLANO
					,LL.TIPO
					,COUNT(*) QUANTIDADE_GLOSADOS
				FROM TB_IA_PRECIFICACAO_TEMP_BASE TIPTB
				LEFT JOIN 
				(
					SELECT LL.LOC_NU_SEQUENCIAL
						,UPPER(LL.LOC_NO) LOC_NO
						,ISNULL(LRMB.TIPO, 'INT') TIPO
					FROM CEPS.DBO.LOG_LOCALIDADE LL
					LEFT JOIN CEPS.DBO.LOG_REGIAO_METROPOLITANA_BRASIL LRMB 
						ON LRMB.SIGLA_UF = LL.UFE_SG
						AND UPPER(dbo.FN_IA_PRECIFICACAO_REMOVE_ACENTOS(LRMB.NOME_MUN)) = UPPER(dbo.FN_IA_PRECIFICACAO_REMOVE_ACENTOS(LL.LOC_NO))
				) LL 
					ON LL.LOC_NU_SEQUENCIAL = TIPTB.idLocalidadeBeneficiario
				WHERE cd_tipo_item IN (28)
				GROUP BY TIPTB.IDPLANO
						 ,LL.TIPO

			) AS GLOSADOS 
				ON GLOSADOS.IDPLANO = TIPTB.IDPLANO
				AND GLOSADOS.TIPO = LL.TIPO

			LEFT JOIN 
			(
				SELECT 
					 TIPTB.IDPLANO
					,LL.TIPO
					,COUNT(*) QUANTIDADE_NAO_GLOSADOS
				FROM TB_IA_PRECIFICACAO_TEMP_BASE TIPTB
				LEFT JOIN 
				(
					SELECT LL.LOC_NU_SEQUENCIAL
						,UPPER(LL.LOC_NO) LOC_NO
						,ISNULL(LRMB.TIPO, 'INT') TIPO
					FROM CEPS.DBO.LOG_LOCALIDADE LL
					LEFT JOIN CEPS.DBO.LOG_REGIAO_METROPOLITANA_BRASIL LRMB 
						ON LRMB.SIGLA_UF = LL.UFE_SG
						AND UPPER(dbo.FN_IA_PRECIFICACAO_REMOVE_ACENTOS(LRMB.NOME_MUN)) = UPPER(dbo.FN_IA_PRECIFICACAO_REMOVE_ACENTOS(LL.LOC_NO))
				) LL 
					ON LL.LOC_NU_SEQUENCIAL = TIPTB.idLocalidadeBeneficiario
				WHERE cd_tipo_item IN (12)
					AND CAST(TIPTB.VL_ITEM AS DECIMAL(15, 4)) - cast(isnull(TIPTB.vl_beneficio, 0) AS DECIMAL(15, 4)) = 0
				GROUP BY TIPTB.IDPLANO
						 ,LL.TIPO

			) AS NAO_GLOSADOS 
				ON NAO_GLOSADOS.IDPLANO = TIPTB.IDPLANO
				AND NAO_GLOSADOS.TIPO = LL.TIPO

			WHERE cd_tipo_item IN (12)
				AND TIPTB.CD_PROCEDIMENTO IS NOT NULL
			GROUP BY TIPTB.IDPLANO
					 ,LL.TIPO

		) TB_CUSTO_MEDIO_PROC_NO_ANO 
			ON TB_CUSTO_MEDIO_PROC_NO_ANO.IDPLANO = TIPTCF.IDPLANO
			AND TB_CUSTO_MEDIO_PROC_NO_ANO.TIPO COLLATE Latin1_General_CI_AS = TIPTCF.TIPO_LOCALIDADE
			
		-- ATUALIZA OS NULLS
		UPDATE #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL
		SET CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO = 0
		WHERE CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO IS NULL
		
		
		
		-- CALCULA A ESPERANCA DO CUSTO MEDIO DOS PROCEDIMENTOS NO ANO
		UPDATE TIPTCF
		SET ESPERANCA_CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO = TB_CUSTO_MEDIO_PROC_NO_ANO.ESPERANCA_CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO
		FROM #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL TIPTCF
		INNER JOIN TB_IA_SEGMENTACAO_LOCALIDADE TISL 
			ON (TISL.ID_LOCALIDADE = TIPTCF.ID_LOCALIDADE_BENEFICIARIO)
		INNER JOIN 
		(
			
			SELECT IDPLANO, CLUSTER, SUM(ESPERANCA_PARCIAL_CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO)  ESPERANCA_CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO
			FROM 
			(
				SELECT  
					 TIPTB.IDPLANO
					,TISL.CLUSTER
					,TIPTB.VL_ITEM AS VL_ITEM
					,VL_ITEM_TOTAL
					,(TIPTB.VL_ITEM / VL_ITEM_TOTAL)  PROBABILIDADE
					,TIPTB.VL_ITEM * (TIPTB.VL_ITEM / VL_ITEM_TOTAL)   ESPERANCA_PARCIAL_CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO
				FROM TB_IA_PRECIFICACAO_TEMP_BASE TIPTB
				INNER JOIN BASICUS_TESTE..SICOBERTURAS_PLANOS_PROCEDIMENTOS SCPP 
					ON SCPP.CD_PLANO = TIPTB.IDPLano
					AND SCPP.CD_PROCEDIMENTO = TIPTB.CD_PROCEDIMENTO
				INNER JOIN TB_IA_SEGMENTACAO_LOCALIDADE TISL 
					ON (TISL.ID_LOCALIDADE = TIPTB.IdLocalidadeBeneficiario)
				INNER JOIN 
				(
					SELECT 
						 IDPLANO
						,TISL.CLUSTER
						,SUM(VL_ITEM) AS VL_ITEM_TOTAL
					FROM TB_IA_PRECIFICACAO_TEMP_BASE TIPTB
					INNER JOIN TB_IA_SEGMENTACAO_LOCALIDADE TISL 
						ON (TISL.ID_LOCALIDADE = TIPTB.IdLocalidadeBeneficiario)
					GROUP BY 
							IdPlano
							,TISL.CLUSTER
			
				) AS T 
					ON T.IdPlano = TIPTB.IdPlano
					AND T.CLUSTER = TISL.CLUSTER 

				WHERE 1 = 1
					AND TIPTB.IdPlano NOT IN (53)
					AND TIPTB.cd_tipo_item = 12
					AND vl_item <> 0
			) AS T 
			GROUP BY IDPLANO, CLUSTER 



		) TB_CUSTO_MEDIO_PROC_NO_ANO 

			ON TB_CUSTO_MEDIO_PROC_NO_ANO.IDPLANO = TIPTCF.IDPLANO
			AND TB_CUSTO_MEDIO_PROC_NO_ANO.CLUSTER = TISL.CLUSTER
			
		-- ATUALIZA OS NULLS
		UPDATE #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL
		SET ESPERANCA_CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO = 0
		WHERE ESPERANCA_CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO IS NULL


		
		

		-- CALCULA O PERCENTUAL DE UTILIZACAO 
		UPDATE TIPTCF
		SET UTILIZACAO = TB_UTILIZACAO.UTILIZACAO
		FROM #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL TIPTCF
		INNER JOIN TB_IA_SEGMENTACAO_LOCALIDADE TISL 
			ON (TISL.ID_LOCALIDADE = TIPTCF.ID_LOCALIDADE_BENEFICIARIO)
		INNER JOIN 
		(
			
			SELECT IdPlano, CLUSTER,  SUM(QUANTO_USOU * (QUANTO_USOU / CAST(TOTAL AS DECIMAL(12, 2)))) UTILIZACAO
			FROM (
				SELECT  TIPTB.CD_BENEFICIARIO, TIPTB.IdPlano, TISL.CLUSTER, COUNT(CD_PROCEDIMENTO) QUANTO_USOU, MAX(T.TOTAL) TOTAL
				FROM #TB_IA_PRECIFICACAO_TEMP_BASE TIPTB 
				INNER JOIN TB_IA_SEGMENTACAO_LOCALIDADE TISL 
					ON (TISL.ID_LOCALIDADE = TIPTB.IdLocalidadeBeneficiario)
				INNER JOIN 
				(
					SELECT  TIPTB.IdPlano, TISL.CLUSTER, COUNT(CD_PROCEDIMENTO) TOTAL
					FROM #TB_IA_PRECIFICACAO_TEMP_BASE TIPTB 
					INNER JOIN TB_IA_SEGMENTACAO_LOCALIDADE TISL 
						ON (TISL.ID_LOCALIDADE = TIPTB.IdLocalidadeBeneficiario)
					GROUP BY TISL.CLUSTER, TIPTB.IdPlano

				) AS T 
					ON T.CLUSTER = TISL.CLUSTER 
					AND T.IdPlano = TIPTB.IdPlano
				GROUP BY TIPTB.CD_BENEFICIARIO, TISL.CLUSTER, TIPTB.IdPlano
			) AS T 
			GROUP BY CLUSTER, IdPlano


		) TB_UTILIZACAO 

			
			ON TB_UTILIZACAO.IDPLano = TIPTCF.IdPlano
			AND TB_UTILIZACAO.Cluster = TISL.Cluster
		

		
		-- CALCULA A ESPERANCA MATEMATICA     
		UPDATE TIPTCF
		SET CUSTO_ESTATISTICO_DO_PLANO = T.CUSTO_ESTATISTICO_DO_PLANO
		FROM #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL TIPTCF
		INNER JOIN (
			SELECT CD_TIPO_PLANO
				,SUM(ESPERANCA_PARCIAL) / 12 AS CUSTO_ESTATISTICO_DO_PLANO
				,MAX(SUM_TOTAL_VL_ITEM) AS CUSTO_VALOR_ITEM
			FROM (
				SELECT CD_TIPO_PLANO
					,CD_PROCEDIMENTO
					,SR.VL_ITEM * (SR.VL_ITEM / SUM_TOTAL_VL_ITEM) ESPERANCA_PARCIAL
					,SUM_TOTAL_VL_ITEM
				FROM (
					SELECT CD_PROCEDIMENTO
						,SR.VL_ITEM AS VL_ITEM
						,IDPlano AS CD_TIPO_PLANO
						,SUM(SR.VL_ITEM) OVER (PARTITION BY IDPlano) SUM_TOTAL_VL_ITEM
					FROM #TB_IA_PRECIFICACAO_ITEM_REMUNERACAO_TRATAMENTOS SR
					WHERE 1 = 1
						--AND IDPlano = 1    
						AND cd_tipo_item = 12
						AND vl_item <> 0
					) AS SR
					--WHERE cd_procedimento = 633    
				) AS T
			GROUP BY CD_TIPO_PLANO
			) AS T ON T.CD_TIPO_PLANO = TIPTCF.IDPlano

		-- ATUALIZA OS NULLS     
		UPDATE #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL
		SET CUSTO_ESTATISTICO_DO_PLANO = 0
		WHERE CUSTO_ESTATISTICO_DO_PLANO IS NULL

		

		

		--SELECT * INTO TB_IA_PRECIFICACAO_REPOSITORIO_CALCULO FROM #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL    
--		COMMIT
--	END TRY

--	BEGIN CATCH
--		DECLARE @APP_NAME VARCHAR(50) = APP_NAME()
--			,@ERRO_MESSAGE VARCHAR(255) = SUBSTRING(ERROR_MESSAGE(), 1, 255)

--		PRINT (@app_name)

--		EXEC SP_IA_PRECIFICACAO_LOG_ERROR @ID_HISTORICO
--			,@DT_HISTORICO
--			,@APP_NAME
--			,'SP_IA_PRECIFICACAO_EXTRACAO'
--			,@ERRO_MESSAGE

--		ROLLBACK
--	END CATCH
--END 

DECLARE @Beneficiarios INT = 1
SELECT 
		 IdPlano
		 ,@Beneficiarios
		 ,UTILIZACAO
		 ,ESPERANCA_QUANTIDADE_MEDIA_DE_PROCEDIMENTOS_POR_PACIENTE_NO_ANO
		 ,ESPERANCA_CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO
		 ,@Beneficiarios * UTILIZACAO * ESPERANCA_QUANTIDADE_MEDIA_DE_PROCEDIMENTOS_POR_PACIENTE_NO_ANO * ESPERANCA_CUSTO_MEDIO_DOS_PROCEDIMENTOS_NO_ANO
FROM #TB_IA_PRECIFICACAO_TEMP_CALC_FINAL





--TOTAL DE QUEM UTILIZOU / TOTAL DE EXPOSTOS 




--BENEFICIARIO             QUANTO USOU?            TOTAL           PROBABILIDADE             ESPERANCA_PARCIAL         ESPERANCA_TOTAL 
--JOAO                     10                      30              0.3                       3                         16.2   
--MARIA                    20                      30              0.66                      13.2                      16.2




--SELECT CD_BENEFICIARIO, CLUSTER, COUNT(CD_PROCEDIMENTO) 
--FROM #TB_IA_PRECIFICACAO_TEMP_BASE
--GROUP BY CD_BENEFICIARIO 



--SELECT IdPlano, CLUSTER,  SUM(QUANTO_USOU * (QUANTO_USOU / CAST(TOTAL AS DECIMAL(12, 2)))) UTILIZACAO
--FROM (
--	SELECT  TIPTB.CD_BENEFICIARIO, TIPTB.IdPlano, TISL.CLUSTER, COUNT(CD_PROCEDIMENTO) QUANTO_USOU, MAX(T.TOTAL) TOTAL
--	FROM #TB_IA_PRECIFICACAO_TEMP_BASE TIPTB 
--	INNER JOIN TB_IA_SEGMENTACAO_LOCALIDADE TISL 
--		ON (TISL.ID_LOCALIDADE = TIPTB.IdLocalidadeBeneficiario)
--	INNER JOIN 
--	(
--		SELECT  TIPTB.IdPlano, TISL.CLUSTER, COUNT(CD_PROCEDIMENTO) TOTAL
--		FROM #TB_IA_PRECIFICACAO_TEMP_BASE TIPTB 
--		INNER JOIN TB_IA_SEGMENTACAO_LOCALIDADE TISL 
--			ON (TISL.ID_LOCALIDADE = TIPTB.IdLocalidadeBeneficiario)
--		GROUP BY TISL.CLUSTER, TIPTB.IdPlano

--	) AS T 
--		ON T.CLUSTER = TISL.CLUSTER 
--		AND T.IdPlano = TIPTB.IdPlano
--	GROUP BY TIPTB.CD_BENEFICIARIO, TISL.CLUSTER, TIPTB.IdPlano
--) AS T 
--GROUP BY CLUSTER, IdPlano




--DECLARE @QT_Beneficiarios INT = 1 ,
--		@Utilizacao FLOAT = 11.24,
--		@CUSTO_MEDIO_DA_ESPERACA_DOS_PROCEDIMENTOS FLOAT = 4,
--		@QUANTIDADE_DE_PROCEDIMENTOS_POR_PACIENTES FLOAT = 2

--SELECT @QT_Beneficiarios * @Utilizacao * @CUSTO_MEDIO_DA_ESPERACA_DOS_PROCEDIMENTOS * @QUANTIDADE_DE_PROCEDIMENTOS_POR_PACIENTES